// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Management.Network.Models
{
    /// <summary> Http listener of an application gateway. </summary>
    public partial class ApplicationGatewayHttpListener : SubResource
    {
        /// <summary> Initializes a new instance of ApplicationGatewayHttpListener. </summary>
        public ApplicationGatewayHttpListener()
        {
        }

        /// <summary> Initializes a new instance of ApplicationGatewayHttpListener. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Name of the HTTP listener that is unique within an Application Gateway. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="type"> Type of the resource. </param>
        /// <param name="frontendIPConfiguration"> Frontend IP configuration resource of an application gateway. </param>
        /// <param name="frontendPort"> Frontend port resource of an application gateway. </param>
        /// <param name="protocol"> Protocol of the HTTP listener. Possible values are &apos;Http&apos; and &apos;Https&apos;. </param>
        /// <param name="hostName"> Host name of HTTP listener. </param>
        /// <param name="sslCertificate"> SSL certificate resource of an application gateway. </param>
        /// <param name="requireServerNameIndication"> Applicable only if protocol is https. Enables SNI for multi-hosting. </param>
        /// <param name="provisioningState"> Provisioning state of the HTTP listener resource. Possible values are: &apos;Updating&apos;, &apos;Deleting&apos;, and &apos;Failed&apos;. </param>
        internal ApplicationGatewayHttpListener(string id, string name, string etag, string type, SubResource frontendIPConfiguration, SubResource frontendPort, ApplicationGatewayProtocol? protocol, string hostName, SubResource sslCertificate, bool? requireServerNameIndication, string provisioningState) : base(id)
        {
            Name = name;
            Etag = etag;
            Type = type;
            FrontendIPConfiguration = frontendIPConfiguration;
            FrontendPort = frontendPort;
            Protocol = protocol;
            HostName = hostName;
            SslCertificate = sslCertificate;
            RequireServerNameIndication = requireServerNameIndication;
            ProvisioningState = provisioningState;
        }

        /// <summary> Name of the HTTP listener that is unique within an Application Gateway. </summary>
        public string Name { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; set; }
        /// <summary> Type of the resource. </summary>
        public string Type { get; set; }
        /// <summary> Frontend IP configuration resource of an application gateway. </summary>
        public SubResource FrontendIPConfiguration { get; set; }
        /// <summary> Frontend port resource of an application gateway. </summary>
        public SubResource FrontendPort { get; set; }
        /// <summary> Protocol of the HTTP listener. Possible values are &apos;Http&apos; and &apos;Https&apos;. </summary>
        public ApplicationGatewayProtocol? Protocol { get; set; }
        /// <summary> Host name of HTTP listener. </summary>
        public string HostName { get; set; }
        /// <summary> SSL certificate resource of an application gateway. </summary>
        public SubResource SslCertificate { get; set; }
        /// <summary> Applicable only if protocol is https. Enables SNI for multi-hosting. </summary>
        public bool? RequireServerNameIndication { get; set; }
        /// <summary> Provisioning state of the HTTP listener resource. Possible values are: &apos;Updating&apos;, &apos;Deleting&apos;, and &apos;Failed&apos;. </summary>
        public string ProvisioningState { get; set; }
    }
}
