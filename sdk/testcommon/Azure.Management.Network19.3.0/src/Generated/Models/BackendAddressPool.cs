// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Management.Network.Models
{
    /// <summary> Pool of backend IP addresses. </summary>
    public partial class BackendAddressPool : SubResource
    {
        /// <summary> Initializes a new instance of BackendAddressPool. </summary>
        public BackendAddressPool()
        {
        }

        /// <summary> Initializes a new instance of BackendAddressPool. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Gets name of the resource that is unique within a resource group. This name can be used to access the resource. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="backendIPConfigurations"> Gets collection of references to IP addresses defined in network interfaces. </param>
        /// <param name="loadBalancingRules"> Gets load balancing rules that use this backend address pool. </param>
        /// <param name="outboundRule"> Gets outbound rules that use this backend address pool. </param>
        /// <param name="outboundRules"> Gets outbound rules that use this backend address pool. </param>
        /// <param name="provisioningState"> Get provisioning state of the public IP resource. Possible values are: &apos;Updating&apos;, &apos;Deleting&apos;, and &apos;Failed&apos;. </param>
        internal BackendAddressPool(string id, string name, string etag, IList<NetworkInterfaceIPConfiguration> backendIPConfigurations, IList<SubResource> loadBalancingRules, SubResource outboundRule, IList<SubResource> outboundRules, string provisioningState) : base(id)
        {
            Name = name;
            Etag = etag;
            BackendIPConfigurations = backendIPConfigurations;
            LoadBalancingRules = loadBalancingRules;
            OutboundRule = outboundRule;
            OutboundRules = outboundRules;
            ProvisioningState = provisioningState;
        }

        /// <summary> Gets name of the resource that is unique within a resource group. This name can be used to access the resource. </summary>
        public string Name { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; set; }
        /// <summary> Gets collection of references to IP addresses defined in network interfaces. </summary>
        public IList<NetworkInterfaceIPConfiguration> BackendIPConfigurations { get; }
        /// <summary> Gets load balancing rules that use this backend address pool. </summary>
        public IList<SubResource> LoadBalancingRules { get; }
        /// <summary> Gets outbound rules that use this backend address pool. </summary>
        public SubResource OutboundRule { get; }
        /// <summary> Gets outbound rules that use this backend address pool. </summary>
        public IList<SubResource> OutboundRules { get; }
        /// <summary> Get provisioning state of the public IP resource. Possible values are: &apos;Updating&apos;, &apos;Deleting&apos;, and &apos;Failed&apos;. </summary>
        public string ProvisioningState { get; set; }
    }
}
