// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Management.Network.Models
{
    /// <summary> Effective Route. </summary>
    public partial class EffectiveRoute
    {
        /// <summary> Initializes a new instance of EffectiveRoute. </summary>
        internal EffectiveRoute()
        {
        }

        /// <summary> Initializes a new instance of EffectiveRoute. </summary>
        /// <param name="name"> The name of the user defined route. This is optional. </param>
        /// <param name="source"> Who created the route. Possible values are: &apos;Unknown&apos;, &apos;User&apos;, &apos;VirtualNetworkGateway&apos;, and &apos;Default&apos;. </param>
        /// <param name="state"> The value of effective route. Possible values are: &apos;Active&apos; and &apos;Invalid&apos;. </param>
        /// <param name="addressPrefix"> The address prefixes of the effective routes in CIDR notation. </param>
        /// <param name="nextHopIpAddress"> The IP address of the next hop of the effective route. </param>
        /// <param name="nextHopType"> The type of Azure hop the packet should be sent to. Possible values are: &apos;VirtualNetworkGateway&apos;, &apos;VnetLocal&apos;, &apos;Internet&apos;, &apos;VirtualAppliance&apos;, and &apos;None&apos;. </param>
        internal EffectiveRoute(string name, EffectiveRouteSource? source, EffectiveRouteState? state, IReadOnlyList<string> addressPrefix, IReadOnlyList<string> nextHopIpAddress, RouteNextHopType? nextHopType)
        {
            Name = name;
            Source = source;
            State = state;
            AddressPrefix = addressPrefix;
            NextHopIpAddress = nextHopIpAddress;
            NextHopType = nextHopType;
        }

        /// <summary> The name of the user defined route. This is optional. </summary>
        public string Name { get; }
        /// <summary> Who created the route. Possible values are: &apos;Unknown&apos;, &apos;User&apos;, &apos;VirtualNetworkGateway&apos;, and &apos;Default&apos;. </summary>
        public EffectiveRouteSource? Source { get; }
        /// <summary> The value of effective route. Possible values are: &apos;Active&apos; and &apos;Invalid&apos;. </summary>
        public EffectiveRouteState? State { get; }
        /// <summary> The address prefixes of the effective routes in CIDR notation. </summary>
        public IReadOnlyList<string> AddressPrefix { get; }
        /// <summary> The IP address of the next hop of the effective route. </summary>
        public IReadOnlyList<string> NextHopIpAddress { get; }
        /// <summary> The type of Azure hop the packet should be sent to. Possible values are: &apos;VirtualNetworkGateway&apos;, &apos;VnetLocal&apos;, &apos;Internet&apos;, &apos;VirtualAppliance&apos;, and &apos;None&apos;. </summary>
        public RouteNextHopType? NextHopType { get; }
    }
}
