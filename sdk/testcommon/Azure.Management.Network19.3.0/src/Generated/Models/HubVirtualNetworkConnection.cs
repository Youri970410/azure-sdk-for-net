// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Management.Network.Models
{
    /// <summary> HubVirtualNetworkConnection Resource. </summary>
    public partial class HubVirtualNetworkConnection : Resource
    {
        /// <summary> Initializes a new instance of HubVirtualNetworkConnection. </summary>
        public HubVirtualNetworkConnection()
        {
        }

        /// <summary> Initializes a new instance of HubVirtualNetworkConnection. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="etag"> Gets a unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="remoteVirtualNetwork"> Reference to the remote virtual network. </param>
        /// <param name="allowHubToRemoteVnetTransit"> VirtualHub to RemoteVnet transit to enabled or not. </param>
        /// <param name="allowRemoteVnetToUseHubVnetGateways"> Allow RemoteVnet to use Virtual Hub&apos;s gateways. </param>
        /// <param name="provisioningState"> The provisioning state of the resource. </param>
        internal HubVirtualNetworkConnection(string id, string name, string type, string location, IDictionary<string, string> tags, string etag, SubResource remoteVirtualNetwork, bool? allowHubToRemoteVnetTransit, bool? allowRemoteVnetToUseHubVnetGateways, ProvisioningState? provisioningState) : base(id, name, type, location, tags)
        {
            Etag = etag;
            RemoteVirtualNetwork = remoteVirtualNetwork;
            AllowHubToRemoteVnetTransit = allowHubToRemoteVnetTransit;
            AllowRemoteVnetToUseHubVnetGateways = allowRemoteVnetToUseHubVnetGateways;
            ProvisioningState = provisioningState;
        }

        /// <summary> Gets a unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> Reference to the remote virtual network. </summary>
        public SubResource RemoteVirtualNetwork { get; set; }
        /// <summary> VirtualHub to RemoteVnet transit to enabled or not. </summary>
        public bool? AllowHubToRemoteVnetTransit { get; set; }
        /// <summary> Allow RemoteVnet to use Virtual Hub&apos;s gateways. </summary>
        public bool? AllowRemoteVnetToUseHubVnetGateways { get; set; }
        /// <summary> The provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; set; }
    }
}
