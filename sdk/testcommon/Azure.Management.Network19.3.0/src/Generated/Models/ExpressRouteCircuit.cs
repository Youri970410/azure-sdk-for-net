// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Management.Network.Models
{
    /// <summary> ExpressRouteCircuit resource. </summary>
    public partial class ExpressRouteCircuit : Resource
    {
        /// <summary> Initializes a new instance of ExpressRouteCircuit. </summary>
        public ExpressRouteCircuit()
        {
        }

        /// <summary> Initializes a new instance of ExpressRouteCircuit. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="sku"> The SKU. </param>
        /// <param name="etag"> Gets a unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="allowClassicOperations"> Allow classic operations. </param>
        /// <param name="circuitProvisioningState"> The CircuitProvisioningState state of the resource. </param>
        /// <param name="serviceProviderProvisioningState"> The ServiceProviderProvisioningState state of the resource. Possible values are &apos;NotProvisioned&apos;, &apos;Provisioning&apos;, &apos;Provisioned&apos;, and &apos;Deprovisioning&apos;. </param>
        /// <param name="authorizations"> The list of authorizations. </param>
        /// <param name="peerings"> The list of peerings. </param>
        /// <param name="serviceKey"> The ServiceKey. </param>
        /// <param name="serviceProviderNotes"> The ServiceProviderNotes. </param>
        /// <param name="serviceProviderProperties"> The ServiceProviderProperties. </param>
        /// <param name="provisioningState"> Gets the provisioning state of the public IP resource. Possible values are: &apos;Updating&apos;, &apos;Deleting&apos;, and &apos;Failed&apos;. </param>
        /// <param name="gatewayManagerEtag"> The GatewayManager Etag. </param>
        /// <param name="allowGlobalReach"> Flag to enable Global Reach on the circuit. </param>
        internal ExpressRouteCircuit(string id, string name, string type, string location, IDictionary<string, string> tags, ExpressRouteCircuitSku sku, string etag, bool? allowClassicOperations, string circuitProvisioningState, ServiceProviderProvisioningState? serviceProviderProvisioningState, IList<ExpressRouteCircuitAuthorization> authorizations, IList<ExpressRouteCircuitPeering> peerings, string serviceKey, string serviceProviderNotes, ExpressRouteCircuitServiceProviderProperties serviceProviderProperties, string provisioningState, string gatewayManagerEtag, bool? allowGlobalReach) : base(id, name, type, location, tags)
        {
            Sku = sku;
            Etag = etag;
            AllowClassicOperations = allowClassicOperations;
            CircuitProvisioningState = circuitProvisioningState;
            ServiceProviderProvisioningState = serviceProviderProvisioningState;
            Authorizations = authorizations;
            Peerings = peerings;
            ServiceKey = serviceKey;
            ServiceProviderNotes = serviceProviderNotes;
            ServiceProviderProperties = serviceProviderProperties;
            ProvisioningState = provisioningState;
            GatewayManagerEtag = gatewayManagerEtag;
            AllowGlobalReach = allowGlobalReach;
        }

        /// <summary> The SKU. </summary>
        public ExpressRouteCircuitSku Sku { get; set; }
        /// <summary> Gets a unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> Allow classic operations. </summary>
        public bool? AllowClassicOperations { get; set; }
        /// <summary> The CircuitProvisioningState state of the resource. </summary>
        public string CircuitProvisioningState { get; set; }
        /// <summary> The ServiceProviderProvisioningState state of the resource. Possible values are &apos;NotProvisioned&apos;, &apos;Provisioning&apos;, &apos;Provisioned&apos;, and &apos;Deprovisioning&apos;. </summary>
        public ServiceProviderProvisioningState? ServiceProviderProvisioningState { get; set; }
        /// <summary> The list of authorizations. </summary>
        public IList<ExpressRouteCircuitAuthorization> Authorizations { get; set; }
        /// <summary> The list of peerings. </summary>
        public IList<ExpressRouteCircuitPeering> Peerings { get; set; }
        /// <summary> The ServiceKey. </summary>
        public string ServiceKey { get; set; }
        /// <summary> The ServiceProviderNotes. </summary>
        public string ServiceProviderNotes { get; set; }
        /// <summary> The ServiceProviderProperties. </summary>
        public ExpressRouteCircuitServiceProviderProperties ServiceProviderProperties { get; set; }
        /// <summary> Gets the provisioning state of the public IP resource. Possible values are: &apos;Updating&apos;, &apos;Deleting&apos;, and &apos;Failed&apos;. </summary>
        public string ProvisioningState { get; set; }
        /// <summary> The GatewayManager Etag. </summary>
        public string GatewayManagerEtag { get; set; }
        /// <summary> Flag to enable Global Reach on the circuit. </summary>
        public bool? AllowGlobalReach { get; set; }
    }
}
