// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Sample.Models
{
    /// <summary> Advisor Recommendation. </summary>
    public partial class ResourceRecommendationBase : Resource
    {
        /// <summary> Initializes a new instance of ResourceRecommendationBase. </summary>
        public ResourceRecommendationBase()
        {
        }

        /// <summary> Initializes a new instance of ResourceRecommendationBase. </summary>
        /// <param name="category"> The category of the recommendation. </param>
        /// <param name="impact"> The business impact of the recommendation. </param>
        /// <param name="impactedField"> The resource type identified by Advisor. </param>
        /// <param name="impactedValue"> The resource identified by Advisor. </param>
        /// <param name="lastUpdated"> The most recent time that Advisor checked the validity of the recommendation. </param>
        /// <param name="metadata"> The recommendation metadata. </param>
        /// <param name="recommendationTypeId"> The recommendation-type GUID. </param>
        /// <param name="risk"> The potential risk of not implementing the recommendation. </param>
        /// <param name="shortDescription"> A summary of the recommendation. </param>
        /// <param name="suppressionIds"> The list of snoozed and dismissed rules for the recommendation. </param>
        /// <param name="extendedProperties"> Extended properties. </param>
        /// <param name="resourceMetadata"> Metadata of resource that was assessed. </param>
        /// <param name="id"> The resource ID. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. </param>
        internal ResourceRecommendationBase(Category? category, Impact? impact, string impactedField, string impactedValue, DateTimeOffset? lastUpdated, IDictionary<string, object> metadata, string recommendationTypeId, Risk? risk, ShortDescription shortDescription, IList<Guid> suppressionIds, IDictionary<string, string> extendedProperties, ResourceMetadata resourceMetadata, string id, string name, string type) : base(id, name, type)
        {
            Category = category;
            Impact = impact;
            ImpactedField = impactedField;
            ImpactedValue = impactedValue;
            LastUpdated = lastUpdated;
            Metadata = metadata;
            RecommendationTypeId = recommendationTypeId;
            Risk = risk;
            ShortDescription = shortDescription;
            SuppressionIds = suppressionIds;
            ExtendedProperties = extendedProperties;
            ResourceMetadata = resourceMetadata;
        }

        /// <summary> The category of the recommendation. </summary>
        public Category? Category { get; set; }
        /// <summary> The business impact of the recommendation. </summary>
        public Impact? Impact { get; set; }
        /// <summary> The resource type identified by Advisor. </summary>
        public string ImpactedField { get; set; }
        /// <summary> The resource identified by Advisor. </summary>
        public string ImpactedValue { get; set; }
        /// <summary> The most recent time that Advisor checked the validity of the recommendation. </summary>
        public DateTimeOffset? LastUpdated { get; set; }
        /// <summary> The recommendation metadata. </summary>
        public IDictionary<string, object> Metadata { get; set; }
        /// <summary> The recommendation-type GUID. </summary>
        public string RecommendationTypeId { get; set; }
        /// <summary> The potential risk of not implementing the recommendation. </summary>
        public Risk? Risk { get; set; }
        /// <summary> A summary of the recommendation. </summary>
        public ShortDescription ShortDescription { get; set; }
        /// <summary> The list of snoozed and dismissed rules for the recommendation. </summary>
        public IList<Guid> SuppressionIds { get; set; }
        /// <summary> Extended properties. </summary>
        public IDictionary<string, string> ExtendedProperties { get; set; }
        /// <summary> Metadata of resource that was assessed. </summary>
        public ResourceMetadata ResourceMetadata { get; set; }
    }
}
