// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Sample.Models
{
    /// <summary> The metadata entity contract. </summary>
    public partial class MetadataEntity
    {
        /// <summary> Initializes a new instance of MetadataEntity. </summary>
        internal MetadataEntity()
        {
        }

        /// <summary> Initializes a new instance of MetadataEntity. </summary>
        /// <param name="id"> The resource Id of the metadata entity. </param>
        /// <param name="type"> The type of the metadata entity. </param>
        /// <param name="name"> The name of the metadata entity. </param>
        /// <param name="displayName"> The display name. </param>
        /// <param name="dependsOn"> The list of keys on which this entity depends on. </param>
        /// <param name="applicableScenarios"> The list of scenarios applicable to this metadata entity. </param>
        /// <param name="supportedValues"> The list of supported values. </param>
        internal MetadataEntity(string id, string type, string name, string displayName, IReadOnlyList<string> dependsOn, IReadOnlyList<string> applicableScenarios, IReadOnlyList<MetadataSupportedValueDetail> supportedValues)
        {
            Id = id;
            Type = type;
            Name = name;
            DisplayName = displayName;
            DependsOn = dependsOn;
            ApplicableScenarios = applicableScenarios;
            SupportedValues = supportedValues;
        }

        /// <summary> The resource Id of the metadata entity. </summary>
        public string Id { get; }
        /// <summary> The type of the metadata entity. </summary>
        public string Type { get; }
        /// <summary> The name of the metadata entity. </summary>
        public string Name { get; }
        /// <summary> The display name. </summary>
        public string DisplayName { get; }
        /// <summary> The list of keys on which this entity depends on. </summary>
        public IReadOnlyList<string> DependsOn { get; }
        /// <summary> The list of scenarios applicable to this metadata entity. </summary>
        public IReadOnlyList<string> ApplicableScenarios { get; }
        /// <summary> The list of supported values. </summary>
        public IReadOnlyList<MetadataSupportedValueDetail> SupportedValues { get; }
    }
}
